import 'dotenv/config'
import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';
import path from 'path'
import { fileURLToPath } from 'url'
import fs from 'fs'

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename)
const __siteroot = __dirname.replace('/cli/backlogs', '');
const __target = '/src/_data/catalog/'
const __targetFile = 'books.json'

// Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
  key: process.env.GOOGLE_PRIVATE_KEY,
  scopes: ['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive.file'],
})

const books = new GoogleSpreadsheet(process.env.BOOKS_SHEET_ID, serviceAccountAuth)

await books.loadInfo() // loads document properties and worksheets
const booksSheet = books.sheetsByTitle['Books'] // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
const allBooks = await booksSheet.getRows()
const jsonArr = []
for (var i = 0; i < allBooks.length; i++) {
  if (allBooks[i].get("Status") === "1 In Progress" || allBooks[i].get("Read?") === "X") {
    jsonArr.push({
      title: allBooks[i].get("Title"),
      authorFirst: allBooks[i].get("Author First"),
      authorLast: allBooks[i].get("Author Last"),
      read: (allBooks[i].get("Read?") === "X") ? true : false,
      compDate: formatDate(allBooks[i].get("Comp Date")),
      rating: getStars(allBooks[i].get("Rating")),
      status: trimStatus(allBooks[i].get("Status")),
      pages: allBooks[i].get("Pages"),
      isbn: allBooks[i].get("ISBN"),
      localCover: (allBooks[i].get("Local Cover") === "TRUE") ? true : false,
    })
  }
}

fs.writeFile(__siteroot + __target + __targetFile, JSON.stringify(jsonArr), function(err) {
  if (err) {
    console.log(err)
  }
})

function getStars(rating) {
  var stars = ''
  if (rating === "") {
    return stars
  }
  const fullStar = "★";
	const halfStar = "½";
  for (var i = 1; i <= rating; i++) {
    stars += fullStar
  }
  if (rating % 1 !== 0) {
    stars += halfStar
  }
  return stars
}

function formatDate(date) {
  if (date === "") {
    return ""
  }
  return new Date(date).toLocaleDateString('en-za')
}

function trimStatus(status) {
  if (status === "") {
    return ""
  }
  return status.substring(2).trim()
}